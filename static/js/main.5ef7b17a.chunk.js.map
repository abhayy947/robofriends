{"version":3,"sources":["reportWebVitals.js","components/Card.js","components/CardList.js","components/SearchBox.js","components/ErrorBoundry.js","components/Scroll.js","containers/App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Card","props","id","name","email","className","alt","src","CardList","robots","cardComponent","map","user","i","SearchBox","Component","searchField","searchChange","type","placeholder","onChange","scroll","style","overflow","border","height","children","App","onSearchChange","event","setState","target","value","state","fetch","response","json","users","this","filteredrobots","filter","robot","toLowerCase","includes","Scroll","ReactDOM","render","document","getElementById"],"mappings":"8LAYeA,G,YAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,4BCQCQ,EAbJ,SAACC,GAAS,IACZC,EAAeD,EAAfC,GAAGC,EAAYF,EAAZE,KAAKC,EAAOH,EAAPG,MAChB,OACC,sBAAKC,UAAU,sDAAf,UACG,qBAAKC,IAAI,OACTC,IAAG,yCAAoCL,EAApC,mBAEH,6BAAKC,IACL,4BAAIC,QCEMI,EATA,SAAC,GAAY,IAAXC,EAAU,EAAVA,OACTC,EAAcD,EAAOE,KAAI,SAACC,EAAKC,GAAN,OAAU,cAAC,EAAD,CAAcX,GAAIO,EAAOI,GAAGX,GAAIC,KAAMM,EAAOI,GAAGV,KAAMC,MAAOK,EAAOI,GAAGT,OAA5DS,MAEtD,OACK,8BACMH,KCMII,GCXWC,Y,MDDV,SAAC,GAA6B,EAA5BC,YAA6B,IAAjBC,EAAgB,EAAhBA,aAC7B,OACC,qBAAKZ,UAAU,QAAf,SACE,uBACAA,UAAU,mCACVa,KAAK,SACLC,YAAY,SACZC,SAAUH,QEECI,EARF,SAACpB,GACb,OACU,qBAAKqB,MAAO,CAAEC,SAAU,SAAUC,OAAQ,kBAAmBC,OAAQ,SAArE,SACCxB,EAAMyB,YC0CHC,E,kDAxCV,aAAc,IAAD,8BACZ,gBAcAC,eAAe,SAACC,GACX,EAAKC,SAAS,CAACd,YAAYa,EAAME,OAAOC,SAd7C,EAAKC,MAAM,CACVxB,OAAO,GACFO,YAAY,IAJN,E,gEAQU,IAAD,OACrBkB,MAAM,6CACHxC,MAAK,SAAAyC,GAAQ,OAAEA,EAASC,UACxB1C,MAAK,SAAA2C,GAAK,OAAE,EAAKP,SAAS,CAACrB,OAAO4B,S,+BAS1B,IAAD,EACoBC,KAAKL,MAAzBxB,EADA,EACAA,OAAOO,EADP,EACOA,YACXuB,EAAe9B,EAAO+B,QAAO,SAAAC,GAAK,OACjCA,EAAMtC,KAAKuC,cAAcC,SAAS3B,EAAY0B,kBAEvD,OACI,sBAAKrC,UAAU,KAAf,UACI,oBAAIA,UAAU,KAAd,yBACI,cAAC,EAAD,CAAWY,aAAcqB,KAAKV,iBAC5B,cAACgB,EAAD,UAEC,cAAC,EAAD,CAAUnC,OAAQ8B,a,GAhCfxB,aCAtB8B,IAASC,OACR,cAAC,EAAD,IACGC,SAASC,eAAe,SAM5BzD,M","file":"static/js/main.5ef7b17a.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\n\r\nconst Card=(props)=>{\r\n  const {id,name,email}=props;\r\n\treturn(\r\n\t\t<div className='tc grow bg-light-green br3 pa3 ma2 dib bw2 shadow-5'>\r\n\t\t   <img alt=\"robo\" \r\n\t\t   src={`https://robohash.org/set_set10/${id}?size=200x200`}\r\n\t\t   />\r\n\t\t   <h2>{name}</h2>\r\n\t\t   <p>{email}</p>\r\n\t\t</div>\r\n    );\r\n\r\n}\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n\r\nconst CardList=({robots})=>{\r\n  const cardComponent=robots.map((user,i)=><Card key={i} id={robots[i].id} name={robots[i].name} email={robots[i].email}/>);\r\n\r\nreturn(\r\n\t    <div>\r\n          {cardComponent}\r\n         </div>);\r\n\r\n}\r\nexport default CardList;\r\n","import React from 'react';\r\n\r\nconst SearchBox=({searchField,searchChange})=>{\r\n\treturn(\r\n\t\t<div className='pa2  '>\r\n\t\t  <input\r\n\t\t  className='pa3 ba b--green bg-lightest-blue'\r\n\t\t  type=\"search\" \r\n\t\t  placeholder='Search'\r\n\t\t  onChange={searchChange}\t\t  \r\n\t\t  />\r\n\t\t  </div>\r\n\t\t  );\r\n}\r\nexport default SearchBox;","import React ,{Component}from 'react';\r\n\r\n\r\nclass ErrorBounry extends Component{\r\n\tconstructor(props){\r\n\t \tsuper(props);\r\n\t \tthis.state={\r\n\t \t\thasError: false\r\n\t \t}\r\n\r\n\t }\r\n\r\n    componentDidCatch(error,info){\r\n        this.setState({hasError:true})\r\n  \r\n     }\r\n\r\n\r\n    render(){\r\n    \tif(this.state.hasError){\r\n    \t\treturn<h1>Oooops That is not good</h1>;\r\n    \t}\r\n    \treturn this.props.children\r\n    }\r\n\r\n\r\n }\r\n export default ErrorBounry; ","import React from 'react';\r\n\r\n\r\nconst scroll=(props)=>{\r\n\treturn(\r\n           <div style={{ overflow: 'scroll', border: '5px solid black', height: '800px'}}>\r\n           {props.children}\r\n           </div>\r\n\t\t);\r\n};\r\n\r\nexport default scroll;","import React,{Component} from 'react';\r\nimport CardList from '../components/CardList';\r\nimport ErrorBoundry from '../components/ErrorBoundry';\r\nimport './App.css';\r\nimport SearchBox from '../components/SearchBox';\r\nimport Scroll from '../components/Scroll';\r\n\r\n    class App extends Component{\r\n \t   constructor(){\r\n \t\t   super();\r\n \t\t   this.state={\r\n \t\t\t   robots:[],\r\n\t           searchField:'',\r\n \t\t    }\r\n \t    }\r\n\r\n        componentDidMount(){\r\n\t\t    fetch('http://jsonplaceholder.typicode.com/users')\r\n\t\t\t\t    .then(response=>response.json())\r\n\t\t\t\t    .then(users=>this.setState({robots:users}));\r\n\t\t }\r\n\r\n\r\n \t    onSearchChange=(event)=>{\r\n  \t        this.setState({searchField:event.target.value});\r\n         }\r\n\r\n    \r\n        render(){\r\n        \tconst {robots,searchField}=this.state;\r\n\t\t    const filteredrobots=robots.filter(robot=>\r\n\t\t  \t\t\t      robot.name.toLowerCase().includes(searchField.toLowerCase()));\r\n\t\t \t\t\r\n\t\t \treturn ( \r\n\t\t\t\t    <div className='tc'>\r\n\t\t\t\t        <h1 className='f1'>ROBOFRIENDS</h1>\r\n\t\t\t\t            <SearchBox searchChange={this.onSearchChange}/>\r\n\t\t\t\t     \t        <Scroll>\r\n\t\t\t\t     \t            \r\n\t\t\t\t     \t         <CardList robots={filteredrobots}/>\r\n\t\t\t\t     \t             \r\n\t\t\t\t     \t    </Scroll>\r\n\t\t\t\t    </div>\r\n\t\t\t\t    );\r\n\t\t\t\r\n\t\t}\r\n}\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'tachyons';\nimport reportWebVitals from './reportWebVitals';\n\nimport App from './containers/App';\nReactDOM.render(\n\t<App/>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}